{"version":3,"file":"index.umd.js","sources":["../src/Flipper/context.ts","../src/Flipper/index.tsx","../src/Flipped/index.tsx","../src/ExitContainer/index.tsx"],"sourcesContent":["import { createContext } from 'react'\nimport { FlipCallbacks } from 'flip-toolkit/lib/types'\n\nexport const FlipContext = createContext({} as FlipCallbacks)\nexport const PortalContext = createContext('portal')\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  getFlippedElementPositionsBeforeUpdate,\n  onFlipKeyUpdate\n} from 'flip-toolkit'\nimport {\n  FlipperProps,\n  InProgressAnimations,\n  FlipCallbacks\n} from 'flip-toolkit/lib/types'\nimport { FlippedElementPositionsBeforeUpdateReturnVals } from 'flip-toolkit/lib/flip/getFlippedElementPositions/getFlippedElementPositionsBeforeUpdate/types'\nimport { FlipContext, PortalContext } from './context'\n\nclass Flipper extends Component<FlipperProps> {\n  static defaultProps = {\n    applyTransformOrigin: true,\n    element: 'div'\n  }\n\n  private inProgressAnimations: InProgressAnimations = {}\n  private flipCallbacks: FlipCallbacks = {}\n  private el?: HTMLElement = undefined\n\n  getSnapshotBeforeUpdate(prevProps: FlipperProps) {\n    if (prevProps.flipKey !== this.props.flipKey && this.el) {\n      return getFlippedElementPositionsBeforeUpdate({\n        element: this.el,\n        // if onExit callbacks exist here, we'll cache the DOM node\n        flipCallbacks: this.flipCallbacks,\n        inProgressAnimations: this.inProgressAnimations,\n        portalKey: this.props.portalKey\n      })\n    }\n    return null\n  }\n\n  componentDidUpdate(\n    prevProps: FlipperProps,\n    _prevState: any,\n    cachedData: FlippedElementPositionsBeforeUpdateReturnVals\n  ) {\n    if (this.props.flipKey !== prevProps.flipKey && this.el) {\n      onFlipKeyUpdate({\n        flippedElementPositionsBeforeUpdate: cachedData.flippedElementPositions,\n        cachedOrderedFlipIds: cachedData.cachedOrderedFlipIds,\n        containerEl: this.el,\n        inProgressAnimations: this.inProgressAnimations,\n        flipCallbacks: this.flipCallbacks,\n        applyTransformOrigin: this.props.applyTransformOrigin,\n        spring: this.props.spring,\n        debug: this.props.debug,\n        portalKey: this.props.portalKey,\n        staggerConfig: this.props.staggerConfig,\n        handleEnterUpdateDelete: this.props.handleEnterUpdateDelete,\n        decisionData: {\n          previous: prevProps.decisionData,\n          current: this.props.decisionData\n        },\n        onComplete: this.props.onComplete,\n        onStart: this.props.onStart\n      })\n    }\n  }\n\n  public render() {\n    const { element, className, portalKey } = this.props\n    const Element = element\n\n    let flipperMarkup = (\n      <FlipContext.Provider value={this.flipCallbacks}>\n        {/*\n        // @ts-ignore */}\n        <Element\n          className={className}\n          ref={(el: HTMLElement) => (this.el = el)}\n        >\n          {this.props.children}\n        </Element>\n      </FlipContext.Provider>\n    )\n\n    if (portalKey) {\n      flipperMarkup = (\n        <PortalContext.Provider value={portalKey}>\n          {flipperMarkup}\n        </PortalContext.Provider>\n      )\n    }\n\n    return flipperMarkup\n  }\n}\n// @ts-ignore\n\nif (process.env.NODE_ENV !== 'production') {\n  // @ts-ignore\n  Flipper.propTypes = {\n    flipKey: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.bool\n    ]),\n    children: PropTypes.node.isRequired,\n    spring: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    applyTransformOrigin: PropTypes.bool,\n    debug: PropTypes.bool,\n    element: PropTypes.string,\n    className: PropTypes.string,\n    portalKey: PropTypes.string,\n    staggerConfig: PropTypes.object,\n    decisionData: PropTypes.any,\n    handleEnterUpdateDelete: PropTypes.func,\n    onComplete: PropTypes.func,\n    onStart: PropTypes.func\n  }\n}\n\nexport default Flipper\n","import React, {\n  FunctionComponent,\n  Children,\n  cloneElement,\n  ReactElement\n} from 'react'\nimport PropTypes from 'prop-types'\nimport { utilities, constants } from 'flip-toolkit'\nimport { FlippedProps, SerializableFlippedProps } from 'flip-toolkit/lib/types'\nimport { FlipContext, PortalContext } from '../Flipper/context'\n\nfunction isFunction(child: any): child is Function {\n  return typeof child === 'function'\n}\n\n// This wrapper creates child components for the main Flipper component\nexport const Flipped: FunctionComponent<SerializableFlippedProps> = ({\n  children,\n  flipId,\n  inverseFlipId,\n  portalKey,\n  ...rest\n}) => {\n  let child = children\n  const isFunctionAsChildren = isFunction(child)\n\n  if (!isFunctionAsChildren) {\n    try {\n      child = Children.only(children)\n    } catch (e) {\n      throw new Error('Each Flipped component must wrap a single child')\n    }\n  }\n\n  // if nothing is being animated, assume everything is being animated\n  if (!rest.scale && !rest.translate && !rest.opacity) {\n    utilities.assign(rest, {\n      translate: true,\n      scale: true,\n      opacity: true\n    })\n  }\n\n  const dataAttributes: Record<string, string | undefined> = {\n    [constants.DATA_FLIP_CONFIG]: JSON.stringify(rest)\n  }\n\n  if (flipId !== undefined)\n    dataAttributes[constants.DATA_FLIP_ID] = String(flipId)\n  else if (inverseFlipId)\n    dataAttributes[constants.DATA_INVERSE_FLIP_ID] = String(inverseFlipId)\n  if (portalKey !== undefined) {\n    dataAttributes[constants.DATA_PORTAL_KEY] = portalKey\n  }\n  if (isFunctionAsChildren) {\n    return (child as Function)(dataAttributes)\n  }\n  return cloneElement(child as ReactElement<any>, dataAttributes)\n}\n// @ts-ignore\nexport const FlippedWithContext: FunctionComponent<FlippedProps> = ({\n  children,\n  flipId,\n  shouldFlip,\n  shouldInvert,\n  onAppear,\n  onStart,\n  onStartImmediate,\n  onComplete,\n  onExit,\n  onSpringUpdate,\n  ...rest\n}) => {\n  if (!children) {\n    return null\n  }\n  if (rest.inverseFlipId) {\n    return <Flipped {...rest}>{children}</Flipped>\n  }\n\n  return (\n    <PortalContext.Consumer>\n      {portalKey => (\n        <FlipContext.Consumer>\n          {data => {\n            // if there is no surrounding Flipper component,\n            // we don't want to throw an error, so check\n            // that data exists and is not the default string\n            if (utilities.isObject(data) && flipId) {\n              data[flipId] = {\n                shouldFlip,\n                shouldInvert,\n                onAppear,\n                onStart,\n                onStartImmediate,\n                onComplete,\n                onExit,\n                onSpringUpdate\n              }\n            }\n            return (\n              <Flipped flipId={flipId} {...rest} portalKey={portalKey}>\n                {children}\n              </Flipped>\n            )\n          }}\n        </FlipContext.Consumer>\n      )}\n    </PortalContext.Consumer>\n  )\n}\nif (process.env.NODE_ENV !== 'production') {\n  FlippedWithContext.propTypes = {\n    // @ts-expect-error\n    children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n    inverseFlipId: PropTypes.string,\n    flipId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    opacity: PropTypes.bool,\n    translate: PropTypes.bool,\n    scale: PropTypes.bool,\n    transformOrigin: PropTypes.string,\n    spring: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    onStart: PropTypes.func,\n    onStartImmediate: PropTypes.func,\n    onComplete: PropTypes.func,\n    onAppear: PropTypes.func,\n    onSpringUpdate: PropTypes.func,\n    shouldFlip: PropTypes.func,\n    shouldInvert: PropTypes.func,\n    onExit: PropTypes.func,\n    portalKey: PropTypes.string,\n    stagger: PropTypes.oneOfType([PropTypes.string, PropTypes.bool])\n  }\n}\n\nFlippedWithContext.displayName = 'Flipped'\n\nexport default FlippedWithContext\n","import { cloneElement, ReactElement, ReactNode } from 'react'\nimport { constants } from 'flip-toolkit'\n\nconst ExitContainer = ({ children }: { children: ReactNode }) => {\n  return cloneElement(children as ReactElement<any>, {\n    [constants.DATA_EXIT_CONTAINER]: true\n  })\n}\n\nexport default ExitContainer\n"],"names":["FlipContext","createContext","PortalContext","Flipper","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","inProgressAnimations","flipCallbacks","el","undefined","_proto","prototype","getSnapshotBeforeUpdate","prevProps","flipKey","this","props","getFlippedElementPositionsBeforeUpdate","element","portalKey","componentDidUpdate","_prevState","cachedData","onFlipKeyUpdate","flippedElementPositionsBeforeUpdate","flippedElementPositions","cachedOrderedFlipIds","containerEl","applyTransformOrigin","spring","debug","staggerConfig","handleEnterUpdateDelete","decisionData","previous","current","onComplete","onStart","render","_this2","_this$props","flipperMarkup","React","createElement","Provider","value","className","ref","children","Component","defaultProps","_excluded","_excluded2","Flipped","_ref","_dataAttributes","flipId","inverseFlipId","rest","_objectWithoutPropertiesLoose","child","isFunctionAsChildren","isFunction","Children","only","e","Error","scale","translate","opacity","utilities","assign","dataAttributes","constants","DATA_FLIP_CONFIG","JSON","stringify","DATA_FLIP_ID","String","DATA_INVERSE_FLIP_ID","DATA_PORTAL_KEY","cloneElement","FlippedWithContext","_ref2","shouldFlip","shouldInvert","onAppear","onStartImmediate","onExit","onSpringUpdate","_extends","Consumer","data","isObject","displayName","_cloneElement","DATA_EXIT_CONTAINER"],"mappings":"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"}